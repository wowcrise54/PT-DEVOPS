- name: Setup PostgreSQL master and Telegram Bot
  hosts: master
  become: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - postgresql-12
          - postgresql-contrib
          - python3.9
          - python3-pip
          - git
        state: present
        update_cache: yes

    - name: Install psycopg2
      pip:
       name: psycopg2-binary
  
    - name: Ensure PostgreSQL service is running
      systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Set up PostgreSQL users
      become_user: "{{DB_USER}}"
      postgresql_user:
        name: "{{DB_USER}}"
        password: "{{DB_PASSWORD}}"
        role_attr_flags: "SUPERUSER"
        state: present
    - name: Set up postgres databases
      become_user: "{{DB_USER}}"
      postgresql_db:
        name: "{{DB_DATABASE}}"
        owner: "{{DB_USER}}"
        state: present

    - name: GRANT privilleges 
      become_user: "{{DB_USER}}"
      community.postgresql.postgresql_privs:
        db: postgres
        type: database
        obj: "{{DB_DATABASE}}"
        privs: ALL
        role: "{{DB_USER}}"

    - name: Set up replication user
      become_user: "{{DB_USER}}"
      postgresql_user:
        name: "{{DB_REPL_USER}}"
        password: "{{DB_REPL_PASSWORD}}"
        role_attr_flags: replication
        state: present
    - name: Configure PostgreSQL for replication
      become_user: "{{DB_USER}}"
      blockinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/postgresql.conf"
        block: |
          wal_level = replica
          max_wal_senders = 10
          max_replication_slots = 10
          hot_standby = on
          listen_addresses = '*'

    - name: Configure PSQL
      become_user: "{{DB_USER}}"
      lineinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/pg_hba.conf"
        line: "host replication {{ DB_REPL_USER }} 0.0.0.0/0 md5"
        state: present


    - name: Install git repository
      ansible.builtin.git:
        repo: https://github.com/wowcrise54/PT-DEVOPS.git
        dest: /opt/tg_bot

    - name: Configure PostgreSQL pg_hba.conf
      become_user: "{{DB_USER}}"
      lineinfile:
        path: "/etc/postgresql/{{ pg_version }}/main/pg_hba.conf"
        line: "host all all 0.0.0.0/0 md5"
        state: present
    
    - name: Create postgres table (one)
      become_user: "{{DB_USER}}"
      community.postgresql.postgresql_query:
        db: "{{DB_DATABASE}}"
        query: >
          CREATE TABLE IF NOT EXISTS emails (
            id SERIAL PRIMARY KEY,
            email VARCHAR(50) NOT NULL
          );

    - name: Create postgres table (second)
      become_user: "{{DB_USER}}"
      community.postgresql.postgresql_query:
        db: "{{DB_DATABASE}}"
        query: >
          CREATE TABLE IF NOT EXISTS phone_numbers (
            id SERIAL PRIMARY KEY,
            phone_number VARCHAR(30) NOT NULL
          );

    - name: Insert data into table (one)
      become_user: "{{DB_USER}}"
      postgresql_query:
        db: "{{DB_DATABASE}}"
        query: > 
          INSERT INTO emails (email) VALUES 
          ('test@yandex.ru'),
          ('example@gmail.com');

    - name: Insert data into table (second)
      become_user: "{{DB_USER}}"
      postgresql_query:
        db: "{{DB_DATABASE}}"
        query: >
          INSERT INTO phone_numbers (phone_number) VALUES 
          ('+7(950)2233212'),
          ('8(800)232-23-42');

    - name: Restart PostgreSQL to apply changes
      systemd:
        name: postgresql
        state: restarted

    - name: Install python requirements
      pip: 
        requirements: "/opt/tg_bot/bot/requirements.txt"

    - name: Copy env file
      ansible.builtin.copy: 
        src: .env
        dest: /opt/tg_bot/bot/.env


- name: Setup PostgreSQL replica
  hosts: slave
  become: true
  tasks:
    - name: Install required packages
      apt: 
        name: 
          - postgresql-12
          - postgresql-contrib
        state: present
        update_cache: yes 

    - name: Copy pgpass file
      become_user: postgres
      copy:
        src: .pgpass
        dest: /var/lib/postgresql/.pgpass
        mode: 0600

    - name: Stop PostgreSQL service
      systemd:
        name: postgresql
        state: stopped
    
    - name: Remove old data directory
      ansible.builtin.shell: rm -rf /var/lib/postgresql/{{pg_version}}/main/*

    - name: Test replica
      become_user: postgres
      ansible.builtin.shell: pg_basebackup -R -h {{DB_HOST}} -U {{DB_REPL_USER}} -D /var/lib/postgresql/{{pg_version}}/main -P

    - name: Start Postgres
      systemd:
        name: postgresql
        state: started
        enabled: true
    

- name: Start tg bot
  hosts: master
  become: true
  tasks:
    - name: Tg bot start
      ansible.builtin.shell: "nohup python3 /opt/tg_bot/bot/bot.py &"
