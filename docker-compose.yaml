version: "3.8"

services:
  bot:
    build: ./bot
    volumes:
      - /tmp/:/var/log/postgresql
    depends_on:
      - db
      - db_repl
    env_file:
      - .env


  db:
    build: ./db
    user: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DATABASE: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication ${DB_REPL_USER} 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      -c wal_level=replica
      -c max_wal_senders=10
      -c log_replication_commands=on
      -c hot_standby_feedback=on
      -c wal_log_hints=on
      -c archive_mode=on
      -c archive_command='cp %p /oracle/pg_data/archive/%f'
      -c max_replication_slots=10
      -c logging_collector=on
      -c log_filename='postgresql.log'
      -c log_directory='/var/log/postgresql'
    ports:
      - ${DB_PORT}:5432
    volumes:
      - /tmp/:/var/log/postgresql


  db_repl:
    build: ./db_repl
    user: postgres
    restart: always
    environment:
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/*
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db --port=5432
      do
      echo 'Waiting for primary to connect'
      sleep 1s
      done
      echo 'Backup done, starting replica'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - db
    ports:
      - ${DB_REPL_PORT}:5432
    env_file:
      - .env